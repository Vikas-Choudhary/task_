//problem
Implement the following C/C++ function: unsigned int FindFunctionDefn( const char* strFunctionName, const char* strSourceCode ); FindFunctionDefn takes two strings as inputs: a function name and a program string; it returns as an output the line number that contains the function definition (differentiate this with the function calls) in the program string. The program string is a valid C code; it contains a character "\n" indicate the end of a line with the line number starts from one. The program string is guaranteed not to contain any C (or C++) comments. The function FindFunctionDefn returns 0 if it fails to find the function definition. For example, char strFunctionName[] = "func2"; char strSourceCode[] = "int func1(){ return 0; }\\n int func2(){ return 1; }\\n" "int main(int argc, char*argv[]){ return func2(); }\\n"; FindFunctionDefn( strFunctionName, strSourceCode ) should return 2.

//solution
#include<bits/stdc++.h>
using namespace std;
unsigned int FindFunctionDefn(const char* strFunctionName,const char* strSourceCode)
{
    unsigned int line = 1;
    string s0=strFunctionName, s1=strSourceCode;
    int pos=s1.find(s0);

    if(pos==-1)
    return 0;

    for(int i=0; i<pos; i++)
    {
            if(s1[i]=='\\' && s1[i+1]=='n')
                line++;
    }

    return line;

}

int main()
{
    string s0, s1;
    getline(cin,s0);
    getline(cin,s1);
    char* p0 = &s0[0];
    char* p1 = &s1[0];
    int x=FindFunctionDefn(p0,p1);
    cout<<x<<endl;
}
